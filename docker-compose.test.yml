version: "3"
services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile.development
    restart: always
    hostname: gateway
    env_file:
      - .env.test
    networks:
      - backend
      - frontend
    links:
      - db
    ports:
      - "8080:8080"
    volumes:
      - "./gateway/:/var/www/gateway/"
  task:
    build:
      context: ./task
      dockerfile: Dockerfile.development
    restart: always
    hostname: task
    env_file:
      - .env.test
    networks:
      - backend
    links:
      - db
    volumes:
      - "./task/:/var/www/task/"
  devices:
    build:
      context: ./devices
      dockerfile: Dockerfile.development
    restart: always
    hostname: devices
    env_file:
      - .env.test
    networks:
      - backend
    links:
      - db
    volumes:
      - "./devices/:/var/www/devices/"
  authentication:
    build:
      context: ./authentication
      dockerfile: Dockerfile.development
    restart: always
    hostname: authentication
    env_file:
      - .env.test
    networks:
      - backend
    links:
      - db
    volumes:
      - "./authentication/:/var/www/authentication/"
  permission:
    build:
      context: ./permission
      dockerfile: Dockerfile.development
    restart: always
    hostname: permission
    env_file:
      - .env.test
    networks:
      - backend
    volumes:
      - "./permission/:/var/www/permission/"
  user:
    build:
      context: ./user
      dockerfile: Dockerfile.development
    restart: always
    hostname: user
    env_file:
      - .env.test
    networks:
      - backend
    links:
      - db
    volumes:
      - "./user/:/var/www/user/"
  db:
    build:
      context: ./db
      dockerfile: Dockerfile.development
    restart: always
    hostname: db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      TZ: "Europe/Warsaw"
    volumes:
      - "./db/init/:/docker-entrypoint-initdb.d/"
    networks:
      - backend
    env_file:
      - .env.test
    ports:
      - 27017:27017
networks:
  backend:
    driver: bridge
  frontend:
    external:
      name: infrastructure
